coord_quickmap()
ggplot(counties_data, aes(long, lat, group = county))+
geom_polygon(aes(fill = popblack))+
coord_quickmap()
View(counties_data)
library(reshape2)
library(viridis)
library(tidyverse)
install.packages("maps")
install.packages("maps")
midwestdata<-midwest
midwestdata$region<-ifelse(midwest$state=="IL", "illinois",
ifelse(midwest$state=="MI", "michigan",
ifelse(midwest$state=="WI", "wisconsin",
ifelse(midwest$state=="OH", "ohio",
ifelse(midwest$state=="IN", "indiana",NA)))))
head(midwestdata)
county_map<-map_data("county")
View(county_map)
colnames(county_map)[which(names(county_map) == "subregion")] <- "county"
levels(midwestdata$county) <- tolower(levels(midwestdata$county))
mi_counties <- map_data("county", "illinois") %>%
select(lon = long, lat, group, id = subregion)
View(mi_counties)
ggplot(mi_counties, aes(lon, lat)) +
geom_polygon(aes(group = group), fill = NA, colour = "grey50") +
coord_quickmap()
ggplot(counties_data, aes(long, lat, group = group))+
geom_polygon(aes(fill = popblack))+
coord_quickmap()
county_map<-map_data("county")
colnames(county_map)[which(names(county_map) == "subregion")] <- "county"
levels(midwestdata$county) <- tolower(levels(midwestdata$county))
counties_data<-left_join(midwestdata,county_map,by="county")
# Create the map for population in each county
ggplot(counties_data, aes(long, lat, group = county))+
geom_polygon(aes(fill = poptotal))+
coord_quickmap()
# Create the map for population in each county
ggplot(counties_data, aes(long, lat, group = group))+
geom_polygon(aes(fill = poptotal))+
coord_quickmap()
midwestdata<-midwest
midwestdata$region<-ifelse(midwest$state=="IL", "illinois",
ifelse(midwest$state=="MI", "michigan",
ifelse(midwest$state=="WI", "wisconsin",
ifelse(midwest$state=="OH", "ohio",
ifelse(midwest$state=="IN", "indiana",NA)))))
head(midwestdata)
county_map<-map_data("county")
colnames(county_map)[which(names(county_map) == "subregion")] <- "county"
levels(midwestdata$county) <- tolower(levels(midwestdata$county))
counties_data<-left_join(midwestdata,county_map,by="county")
# Create the map for population in each county
ggplot(counties_data, aes(long, lat, group = group))+
geom_polygon(aes(fill = poptotal))+
coord_quickmap()
## Now lets extract illinoi data from midwest dataset
midwestdata<-filter(midwest,state=="IL")
View(midwestdata)
######################
#extract data from built in maps for illinois
il_counties <- map_data("county", "illinois") %>%
select(lon = long, lat, group, id = subregion)
#joining this with il counties
counties_data<-left_join(midwestdata,il_counties,by=c("county"="id"))
counties_data
View(counties_data)
#joining this with il counties
#but before that lets convert the county names to lower case in order to make join successfull
levels(midwestdata$county) <- tolower(levels(midwestdata$county))
View(midwestdata)
#joining this with il counties
#but before that lets convert the county names to lower case in order to make join successfull
levels(midwestdata$county) <- tolower(levels(midwestdata$county))
View(midwestdata)
View(midwestdata)
View(midwestdata)
View(counties_data)
#joining this with il counties
#but before that lets convert the county names to lower case in order to make join successfull
midwestdata$county <- tolower(midwestdata$county)
View(midwestdata)
#lets join
ilcounties_data<-left_join(midwestdata,il_counties,by=c("county"="id"))
View(ilcounties_data)
ggplot(ilcounties_data, aes(lon, lat,group=county)) +
geom_polygon(fill=poptotal) +
coord_quickmap()
View(ilcounties_data)
ggplot(ilcounties_data, aes(lon, lat,group=county)) +
geom_polygon(fill=ilcounties_data$poptotal) +
coord_quickmap()
ggplot(ilcounties_data, aes(lon, lat,group=county)) +
geom_polygon(fill=ilcounties_data$percwhite) +
coord_quickmap()
#Wow, I can see the population coverage for illinois by each county on the map.
ggplot(ilcounties_data, aes(lon, lat,group=county)) +
geom_polygon(fill=ilcounties_data$poptotal) +
coord_quickmap()
#
ggplot(ilcounties_data, aes(lon, lat,group=county,color=ilcounties_data$percwhite)) +
geom_polygon(fill=ilcounties_data$percwhite) +
coord_quickmap()
#
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color=ilcounties_data$percwhite)) +
geom_polygon(fill=ilcounties_data$percwhite) +
coord_quickmap()
#Lets add colors
p<-p + scale_fill_continuous(low='thistle2', high='darkblue',
guide='colorbar') + xlab("") + ylab("") + coord_map("albers", lat0 = 39, lat1 = 45)
p<- p+ theme(panel.border = element_blank()) + theme(panel.background = element_blank()) + theme(axis.ticks = element_blank()) + theme(axis.text = element_blank())
p
#
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color=ilcounties_data$percwhite)) +
geom_polygon(fill=ilcounties_data$percwhite) +
coord_quickmap()
p
#Lets add colors
p<-p + scale_fill_continuous(low='thistle2', high='darkblue',
guide='colorbar') + xlab("") + ylab("") + coord_map("albers", lat0 = 39, lat1 = 45)
p<- p+ theme(panel.border = element_blank()) + theme(panel.background = element_blank()) + theme(axis.ticks = element_blank()) + theme(axis.text = element_blank())
p
#
p<-ggplot(ilcounties_data, aes(lon, lat,group=county)) +
geom_polygon(fill=ilcounties_data$percwhite) +
coord_quickmap()
p
#Lets add colors
p<-p + scale_fill_continuous(low='thistle2', high='darkblue',
guide='colorbar') + xlab("") + ylab("") + coord_map("albers", lat0 = 39, lat1 = 45)
p<- p+ theme(panel.border = element_blank()) + theme(panel.background = element_blank()) + theme(axis.ticks = element_blank()) + theme(axis.text = element_blank())
p
p
p
#
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color=ilcounties_data$percwhite)) +
geom_polygon(fill=ilcounties_data$percwhite) +
coord_quickmap()
p
#Wow, I can see the population coverage for illinois by each county on the map.
ggplot(ilcounties_data, aes(lon, lat,group=county)) +
geom_polygon(fill=ilcounties_data$poptotal) +
coord_quickmap()
#Wow, I can see the population coverage for illinois by each county on the map.
ggplot(ilcounties_data, aes(lon, lat,group=county,color=poptotal)) +
geom_polygon(fill=ilcounties_data$poptotal) +
coord_quickmap()
#Wow, I can see the population coverage for illinois by each county on the map.
ggplot(ilcounties_data, aes(lon, lat,group=county,color=poptotal)) +
geom_polygon(fill=poptotal) +
coord_quickmap()
#4
midwest<-read.csv("Midwest.csv",header = TRUE)
options(scipen=999)
library(ggplot2)
theme_set(theme_bw())
#5
p<-ggplot(midwest,aes(x=area,y=poptotal))+
geom_point(aes(col=state,size=popdensity))+
geom_smooth(method = "loess", se=F)+
xlim(c(0,0.1))+
ylim(c(0,500000))+
labs(subtitle="Area vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption="Source:midwest"
)
p
#5
p<-ggplot(midwest,aes(x=area,y=poptotal))+
geom_point(aes(col=state,size=popdensity))+
geom_smooth(method = "loess", se=F)+
xlim(c(0,0.1))+
ylim(c(0,500000))+
labs(subtitle="Area vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption="Source:midwest"
)
p
View(midwest)
#5
p<-ggplot(midwest,aes(x=area,y=poptotal))+
geom_point(aes(col=state,size=popdensity))+
geom_smooth(method = "loess", se=F)+
xlim(c(0,0.1))+
# ylim(c(0,500000))+
labs(subtitle="Area vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption="Source:midwest"
)
p
p<-ggplot(midwest,aes(x=area,y=poptotal,na.rm = FALSE))+
geom_point(aes(col=state,size=popdensity))+
geom_smooth(method = "loess", se=F)+
labs(subtitle="Area vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption="Source:midwest"
)
p
p<-ggplot(midwest,aes(x=area,y=poptotal,na.rm = FALSE))+
geom_point(aes(col=state,size=popdensity))+
geom_smooth(method = "loess", se=F)+
labs(subtitle="Area vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption="Source:midwest"
)
p<-ggplot(midwest,aes(x=area,y=poptotal))+
geom_point(aes(col=state,size=popdensity))+
geom_smooth(method = "loess", se=F)+
xlim(c(0,0.1))+
ylim(c(500000,NA))+
labs(subtitle="Area vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption="Source:midwest"
)
p
p<-ggplot(midwest,aes(x=area,y=poptotal))+
geom_point(aes(col=state,size=popdensity))+
geom_smooth(method = "loess", se=F)+
xlim(c(0,0.1))+
ylim(c(500000,NA))+
labs(subtitle="Area vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption="Source:midwest"
)
p
options(scipen=999)
#lets see area covered for percent of white
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color=ilcounties_data$percwhite)) +
geom_polygon(fill=ilcounties_data$percwhite) +
coord_quickmap()
p
#Wow, I can see the population coverage for illinois by each county on the map.
ggplot(ilcounties_data, aes(lon, lat,group=county,color=poptotal)) +
geom_polygon(fill=poptotal) +
coord_quickmap()
#Wow, I can see the population coverage for illinois by each county on the map.
ggplot(ilcounties_data, aes(lon, lat,group=county,color=poptotal)) +
geom_polygon(fill=ilcounties_data$poptotal) +
coord_quickmap()
#6
#a. It would be better to use inmetro as a factor rather than an integer
midwest$inmetro
midwestdata<-midwest[!is.na(midwest$inmetro),]
p <- ggplot(midwestdata, aes(x= factor(inmetro), y=percbelowpoverty,fill=factor(inmetro)))
p +ggtitle("Percent of Population under the Poverty Level \n by Metro Area")+
theme(plot.title = element_text(color="black", hjust=0.5, face="bold.italic"))+
stat_summary(fun.y = mean,geom = "bar")+
scale_x_discrete(labels=c("0" = "In Metro Area", "1" = "Not in Metro Area"))+
scale_y_continuous(name="Population Percentage")
p
p +ggtitle("Percent of Population under the Poverty Level \n by Metro Area")+
theme(plot.title = element_text(color="black", hjust=0.5, face="bold.italic"))+
stat_summary(fun.y = mean,geom = "bar")+
scale_x_discrete(labels=c("0" = "In Metro Area", "1" = "Not in Metro Area"))+
scale_y_continuous(name="Population Percentage")
#7
library(reshape2)
#Here I researched a bit to use a function for colorblind. And found this package viridis that I tried
#to use in the code to give the graph a colorblind
library(viridis)
midwestMelt <- melt(midwest[,c('PID','percchildbelowpovert', 'percadultpoverty','percelderlypoverty')],id="PID" )
head(midwestMelt)
p <- ggplot(midwestMelt, aes(x= variable, y=value,fill=variable))
p +ggtitle("Comparing Poverty Levels \n Child vs Adult vs Elderly")+
theme(plot.title = element_text(color="black", hjust=0.5, face="bold.italic"))+
stat_summary(fun.y = mean,geom = "bar")+
scale_x_discrete(labels=c("percchildbelowpovert" = "Child", "percadultpoverty" = "Adult","percelderlypoverty"="Elderly"),name="Age group")+
scale_y_continuous(name="Poverty Percent")+
labs(fill = "Age group")+
scale_fill_viridis(discrete=TRUE)
data("midwest")
library(tidyr)
midwest<-midwest %>% drop_na()
midwest$CountyStates <- paste(midwest$county,midwest$state)
midwest$percchildbelowpovert_mean <- mean(midwest$percchildbelowpovert)
midwest$percchildbelowpovert_type<-ifelse(midwest$percchildbelowpovert <midwest$percchildbelowpovert_mean, "Below Average", "Above Average")
head(midwest)
midwest <- midwest[order(midwest$percchildbelowpovert), ]
midwest$CountyStates<-factor(midwest$CountyStates,levels=midwest$CountyStates)
ggplot(midwest, aes(x=CountyStates, y=percchildbelowpovert)) +
geom_bar(stat='identity', aes(fill=percchildbelowpovert_type))  +
scale_fill_manual(name="Child Poverty",
labels = c("Below Average","Above Average"),
values = c("below"="#00ba38", "above"="#f8766d")) +
labs(subtitle="Percent Child Poverty of each county",
title= "Diverging Bars") +
coord_flip()
midwest$percchildbelowpovert_z <-  round((midwest$percchildbelowpovert - mean(midwest$percchildbelowpovert))/sd(midwest$percchildbelowpovert), 2)
midwest$percchildbelowpovert_type_new <- ifelse(midwest$percchildbelowpovert_z < 0, "below", "above")
midwest <- midwest[order(midwest$percchildbelowpovert_z), ]
p<-ggplot(midwest, aes(x=CountyStates, y=percchildbelowpovert_z)) +
geom_bar(stat='identity', aes(fill=percchildbelowpovert_type_new), width=.5)  +
scale_fill_manual(name="Child Poverty",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Percent Child Poverty of each county'",
title= "Diverging Bars") +
coord_flip()
p
library(tidyr)
midwest<-midwest %>% drop_na()
midwest$CountyStates <- paste(midwest$county,midwest$state)
midwest$percchildbelowpovert_z <-  round((midwest$percchildbelowpovert - mean(midwest$percchildbelowpovert))/sd(midwest$percchildbelowpovert), 2)
midwest$percchildbelowpovert_type_new <- ifelse(midwest$percchildbelowpovert_z < 0, "below", "above")
midwest <- midwest[order(midwest$percchildbelowpovert_z), ]
p<-ggplot(midwest, aes(x=CountyStates, y=percchildbelowpovert_z)) +
geom_bar(stat='identity', aes(fill=percchildbelowpovert_type_new), width=.5)  +
scale_fill_manual(name="Child Poverty",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Percent Child Poverty of each county'",
title= "Diverging Bars") +
coord_flip()
p
midwest$percchildbelowpovert_mean <- mean(midwest$percchildbelowpovert)
midwest$percchildbelowpovert_type<-ifelse(midwest$percchildbelowpovert <midwest$percchildbelowpovert_mean, "Below Average", "Above Average")
head(midwest)
midwest <- midwest[order(midwest$percchildbelowpovert), ]
midwest$CountyStates<-factor(midwest$CountyStates,levels=midwest$CountyStates)
ggplot(midwest, aes(x=CountyStates, y=percchildbelowpovert)) +
geom_bar(stat='identity', aes(fill=percchildbelowpovert_type))  +
scale_fill_manual(name="Child Poverty",
labels = c("Below Average","Above Average"),
values = c("below"="#00ba38", "above"="#f8766d")) +
labs(subtitle="Percent Child Poverty of each county",
title= "Diverging Bars") +
coord_flip()
midwest$percchildbelowpovert_z <-  round((midwest$percchildbelowpovert - mean(midwest$percchildbelowpovert))/sd(midwest$percchildbelowpovert), 2)
midwest$percchildbelowpovert_type_new <- ifelse(midwest$percchildbelowpovert_z < 0, "below", "above")
midwest <- midwest[order(midwest$percchildbelowpovert_z), ]
p<-ggplot(midwest, aes(x=CountyStates, y=percchildbelowpovert_z)) +
geom_bar(stat='identity', aes(fill=percchildbelowpovert_type_new), width=.5)  +
scale_fill_manual(name="Child Poverty",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Percent Child Poverty of each county'",
title= "Diverging Bars") +
coord_flip()
p
ggsave('p.png', p, height = 50, width = 20, limitsize = F)
midwest <- midwest[order(midwest$percchildbelowpovert_z), ]
midwest.ordered<-midwest[order(midwest$poptotal), ]
top30<-tail(midwest.ordered,30)
p<-ggplot(top30, aes(x=CountyStates, y=percchildbelowpovert_z)) +
geom_bar(stat='identity', aes(fill=percchildbelowpovert_type_new), width=.5)  +
scale_fill_manual(name="Child Poverty",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Percent Child Poverty of each county'",
title= "Diverging Bars") +
coord_flip()
p
midwest<-midwest %>% drop_na()
midwest$CountyStates <- paste(midwest$county,midwest$state)
midwest$percchildbelowpovert_mean <- mean(midwest$percchildbelowpovert)
midwest$percchildbelowpovert_type<-ifelse(midwest$percchildbelowpovert <midwest$percchildbelowpovert_mean, "Below Average", "Above Average")
head(midwest)
midwest <- midwest[order(midwest$percchildbelowpovert), ]
midwest$CountyStates<-factor(midwest$CountyStates,levels=midwest$CountyStates)
ggplot(midwest, aes(x=CountyStates, y=percchildbelowpovert)) +
geom_bar(stat='identity', aes(fill=percchildbelowpovert_type))  +
scale_fill_manual(name="Child Poverty",
labels = c("Below Average","Above Average"),
values = c("below"="#00ba38", "above"="#f8766d")) +
labs(subtitle="Percent Child Poverty of each county",
title= "Diverging Bars") +
coord_flip()
data("midwest")
library(tidyr)
midwest<-midwest %>% drop_na()
midwest$CountyStates <- paste(midwest$county,midwest$state)
midwest$percchildbelowpovert_mean <- mean(midwest$percchildbelowpovert)
midwest$percchildbelowpovert_type<-ifelse(midwest$percchildbelowpovert <midwest$percchildbelowpovert_mean, "Below Average", "Above Average")
head(midwest)
midwest <- midwest[order(midwest$percchildbelowpovert), ]
midwest$CountyStates<-factor(midwest$CountyStates,levels=midwest$CountyStates)
ggplot(midwest, aes(x=CountyStates, y=percchildbelowpovert)) +
geom_bar(stat='identity', aes(fill=percchildbelowpovert_type))  +
scale_fill_manual(name="Child Poverty",
labels = c("Below Average","Above Average"),
values = c("below"="#00ba38", "above"="#f8766d")) +
labs(subtitle="Percent Child Poverty of each county",
title= "Diverging Bars") +
coord_flip()
p
#getting maps for lat long values
install.packages("maps")
install.packages("maps")
options(scipen=999)
#extract data from built in maps for illinois
il_counties <- map_data("county", "illinois") %>%
select(lon = long, lat, group, id = subregion)
#looking at the boundary for illinois counties.
ggplot(mi_counties, aes(lon, lat)) +
geom_polygon(aes(group = group), fill = NA, colour = "grey50") +
coord_quickmap()
#looking at the boundary for illinois counties.
ggplot(il_counties, aes(lon, lat)) +
geom_polygon(aes(group = group), fill = NA, colour = "grey50") +
coord_quickmap()
## Now lets extract illinoi data from midwest dataset
midwestdata<-filter(midwest,state=="IL")
#joining this with il counties
#but before that lets convert the county names to lower case in order to make join successfull
midwestdata$county <- tolower(midwestdata$county)
#lets join
ilcounties_data<-left_join(midwestdata,il_counties,by=c("county"="id"))
#Wow, I can see the population coverage for illinois by each county on the map.
ggplot(ilcounties_data, aes(lon, lat,group=county,color=poptotal)) +
geom_polygon(fill=ilcounties_data$poptotal) +
coord_quickmap()
#lets see area covered for percent of white
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color=ilcounties_data$percwhite)) +
geom_polygon(fill=ilcounties_data$percwhite) +
coord_quickmap()
p
#lets see area covered for percent of white
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color=white)) +
geom_polygon(fill=ilcounties_data$percwhite) +
coord_quickmap()
p
#lets see area covered for percent of white
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color="white")) +
geom_polygon(fill=ilcounties_data$percwhite) +
coord_quickmap()
p
p
#lets see area covered for percent of white
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color=ilcounties_data$percwhite)) +
geom_polygon(fill=ilcounties_data$percwhite) +
coord_quickmap()
p
View(midwestdata)
#how about plotting the counties in IL by inmetro factor
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color=ilcounties_data$percwhite)) +
geom_polygon(fill=ilcounties_data$inmetro) +
coord_quickmap()
p
#how about plotting the counties in IL by inmetro factor
class(ilcounties_data$inmetro)
View(midwestdata)
class(midwestdata$inmetro)
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color=ilcounties_data$percwhite)) +
geom_polygon(fill=factor(ilcounties_data$inmetro)) +
coord_quickmap()
p
#how about plotting the counties in IL by inmetro factor
inmetro_colors <- c("#2E74C0", "#CB454A")
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color=ilcounties_data$percwhite)) +
geom_polygon(fill=inmetro_colors) +
coord_quickmap()
p
p<-ggplot(ilcounties_data, aes(lon, lat,group=inmetro,color=ilcounties_data$percwhite)) +
geom_polygon(fill=inmetro_colors) +
coord_quickmap()
p
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color=inmtetro_colors)) +
geom_polygon(fill=ilcounties_data$poptotal) +
coord_quickmap()
p
#how about plotting the counties in IL by inmetro factor
inmtetro_colors <- c("#2E74C0", "#CB454A")
p<-ggplot(ilcounties_data, aes(lon, lat,group=county,color=inmtetro_colors)) +
geom_polygon(fill=ilcounties_data$poptotal) +
coord_quickmap()
p
p<-ggplot(ilcounties_data, aes(lon, lat,group=ilcounties_data$inmetro,color=inmtetro_colors)) +
geom_polygon(fill=ilcounties_data$poptotal) +
coord_quickmap()
p
p <- ggplot(ilcounties_data,
aes(x = long, y = lat,
group = group, fill = inmtetro_colors))
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
p <- ggplot(ilcounties_data,
aes(x = lon, y = lat,
group = group, fill = inmtetro_colors))
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
p <- ggplot(ilcounties_data,
aes(x = lon, y = lat,
group = group, fill = inmetro))
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
p
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
scale_x_discrete(labels=c("0" = "In Metro Area", "1" = "Not in Metro Area"))+
scale_y_continuous(name="Population Percentage")
p
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
scale_x_discrete(labels=c("0" = "In Metro Area", "1" = "Not in Metro Area"))+
scale_y_continuous(name="Population Percentage")
